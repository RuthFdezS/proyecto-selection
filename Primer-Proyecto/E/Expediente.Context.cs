//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ExpedienteEntities : DbContext
    {
        public ExpedienteEntities()
            : base("name=ExpedienteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Expediente> Expediente { get; set; }
        public DbSet<Perfiles> Perfiles { get; set; }
        public DbSet<Puesto> Puesto { get; set; }
        public DbSet<PuestoPorExpediente> PuestoPorExpediente { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<Usuarios> Usuarios { get; set; }
        public DbSet<UsuariosPorPerfiles> UsuariosPorPerfiles { get; set; }
<<<<<<< HEAD
    
        public virtual ObjectResult<pa_AgregarExpediente_Result> pa_AgregarExpediente(string identificacion, string promedioprueba, Nullable<System.DateTime> fechanacimiento, string nombre, string apellido, string correoelectronico, string genero, string estadocivil, string idioma, string certificacion, string titulo, string ubicacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            var promediopruebaParameter = promedioprueba != null ?
                new ObjectParameter("promedioprueba", promedioprueba) :
                new ObjectParameter("promedioprueba", typeof(string));
    
            var fechanacimientoParameter = fechanacimiento.HasValue ?
                new ObjectParameter("fechanacimiento", fechanacimiento) :
                new ObjectParameter("fechanacimiento", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var correoelectronicoParameter = correoelectronico != null ?
                new ObjectParameter("correoelectronico", correoelectronico) :
                new ObjectParameter("correoelectronico", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var estadocivilParameter = estadocivil != null ?
                new ObjectParameter("estadocivil", estadocivil) :
                new ObjectParameter("estadocivil", typeof(string));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("idioma", idioma) :
                new ObjectParameter("idioma", typeof(string));
    
            var certificacionParameter = certificacion != null ?
                new ObjectParameter("certificacion", certificacion) :
                new ObjectParameter("certificacion", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_AgregarExpediente_Result>("pa_AgregarExpediente", identificacionParameter, promediopruebaParameter, fechanacimientoParameter, nombreParameter, apellidoParameter, correoelectronicoParameter, generoParameter, estadocivilParameter, idiomaParameter, certificacionParameter, tituloParameter, ubicacionParameter);
        }
    
        public virtual ObjectResult<pa_EliminarExpediente_Result> pa_EliminarExpediente(string identificacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_EliminarExpediente_Result>("pa_EliminarExpediente", identificacionParameter);
        }
    
        public virtual ObjectResult<pa_ModificarExpediente_Result> pa_ModificarExpediente(string identificacion, string promedioprueba, Nullable<System.DateTime> fechanacimiento, string nombre, string apellido, string correoelectronico, string genero, string estadocivil, string idioma, string certificacion, string titulo, string ubicacion)
        {
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("identificacion", identificacion) :
                new ObjectParameter("identificacion", typeof(string));
    
            var promediopruebaParameter = promedioprueba != null ?
                new ObjectParameter("promedioprueba", promedioprueba) :
                new ObjectParameter("promedioprueba", typeof(string));
    
            var fechanacimientoParameter = fechanacimiento.HasValue ?
                new ObjectParameter("fechanacimiento", fechanacimiento) :
                new ObjectParameter("fechanacimiento", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var correoelectronicoParameter = correoelectronico != null ?
                new ObjectParameter("correoelectronico", correoelectronico) :
                new ObjectParameter("correoelectronico", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("genero", genero) :
                new ObjectParameter("genero", typeof(string));
    
            var estadocivilParameter = estadocivil != null ?
                new ObjectParameter("estadocivil", estadocivil) :
                new ObjectParameter("estadocivil", typeof(string));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("idioma", idioma) :
                new ObjectParameter("idioma", typeof(string));
    
            var certificacionParameter = certificacion != null ?
                new ObjectParameter("certificacion", certificacion) :
                new ObjectParameter("certificacion", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_ModificarExpediente_Result>("pa_ModificarExpediente", identificacionParameter, promediopruebaParameter, fechanacimientoParameter, nombreParameter, apellidoParameter, correoelectronicoParameter, generoParameter, estadocivilParameter, idiomaParameter, certificacionParameter, tituloParameter, ubicacionParameter);
        }
=======
>>>>>>> 6d1d6dde61926c1ef9f2b171a7285dcf51d70d66
    
        public virtual ObjectResult<pa_ModificarPermisosPerfil_Result> pa_ModificarPermisosPerfil(string nicknameUsuario, Nullable<int> codPerfil)
        {
            var nicknameUsuarioParameter = nicknameUsuario != null ?
                new ObjectParameter("nicknameUsuario", nicknameUsuario) :
                new ObjectParameter("nicknameUsuario", typeof(string));
    
            var codPerfilParameter = codPerfil.HasValue ?
                new ObjectParameter("codPerfil", codPerfil) :
                new ObjectParameter("codPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_ModificarPermisosPerfil_Result>("pa_ModificarPermisosPerfil", nicknameUsuarioParameter, codPerfilParameter);
        }
    
        public virtual ObjectResult<pa_ObtenerExpediente_Result> pa_ObtenerExpediente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_ObtenerExpediente_Result>("pa_ObtenerExpediente");
        }
    
        public virtual ObjectResult<pa_ObtenerNombreUsuario_Result> pa_ObtenerNombreUsuario(string nicknameUsuario)
        {
            var nicknameUsuarioParameter = nicknameUsuario != null ?
                new ObjectParameter("nicknameUsuario", nicknameUsuario) :
                new ObjectParameter("nicknameUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_ObtenerNombreUsuario_Result>("pa_ObtenerNombreUsuario", nicknameUsuarioParameter);
        }
    
        public virtual ObjectResult<pa_ObtenerPerfilesUsuario_Result> pa_ObtenerPerfilesUsuario(string nicknameUsuario)
        {
            var nicknameUsuarioParameter = nicknameUsuario != null ?
                new ObjectParameter("nicknameUsuario", nicknameUsuario) :
                new ObjectParameter("nicknameUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_ObtenerPerfilesUsuario_Result>("pa_ObtenerPerfilesUsuario", nicknameUsuarioParameter);
        }
    
        public virtual ObjectResult<pa_VerificarLogin_Result> pa_VerificarLogin(string nicknameUsuario, string pass)
        {
            var nicknameUsuarioParameter = nicknameUsuario != null ?
                new ObjectParameter("nicknameUsuario", nicknameUsuario) :
                new ObjectParameter("nicknameUsuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pa_VerificarLogin_Result>("pa_VerificarLogin", nicknameUsuarioParameter, passParameter);
        }
    
<<<<<<< HEAD
        public virtual int pa_AgregarPuesto(Nullable<int> codpuesto, Nullable<int> disponibilidad, string nombrepuesto, string idioma, string certificacion, string titulo, string ubicacion)
        {
            var codpuestoParameter = codpuesto.HasValue ?
                new ObjectParameter("codpuesto", codpuesto) :
                new ObjectParameter("codpuesto", typeof(int));
    
            var disponibilidadParameter = disponibilidad.HasValue ?
                new ObjectParameter("disponibilidad", disponibilidad) :
                new ObjectParameter("disponibilidad", typeof(int));
    
            var nombrepuestoParameter = nombrepuesto != null ?
                new ObjectParameter("nombrepuesto", nombrepuesto) :
                new ObjectParameter("nombrepuesto", typeof(string));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("idioma", idioma) :
                new ObjectParameter("idioma", typeof(string));
    
            var certificacionParameter = certificacion != null ?
                new ObjectParameter("certificacion", certificacion) :
                new ObjectParameter("certificacion", typeof(string));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_AgregarPuesto", codpuestoParameter, disponibilidadParameter, nombrepuestoParameter, idiomaParameter, certificacionParameter, tituloParameter, ubicacionParameter);
=======
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
>>>>>>> 6d1d6dde61926c1ef9f2b171a7285dcf51d70d66
        }
    }
}
